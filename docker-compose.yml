# どんなコンテナを立ち上げるか
services:
 # ---------------------------------
 # laravelを動かすコンテナ
 # ---------------------------------
  app:
    #networks:
    #  - beginapp_network
    #extra_hosts:
    #  - lochalhost:192.168.96.10
    # どのポートを開いて繋ぐか。下記はコンテナの80番ポートを開いて、ホストの80番につなぐ
    ports:
    #  - "222:22"
      - "8001:80"
    #  - "8443:443"
    # docker/appディレクトリにあるDockerfileを使って、コンテナをビルドするという指定
    build: ./docker/web
    # コンテナの名前を指定
    container_name: beginapp_web
    # ローカルのディレクトリとコンテナ上のディレクトリのリンクを設定
    # ./src は docker-composer.yml のディレクトリ直下にある src を設定している
    # コンテナが作成されると src ディレクトリからコンテナの /var/www/html にアクセスすることができる
    volumes:
      - ./src:/var/www/html/trunk:cached
    tty: true

# ----------------------------------
# MySQLを動かすコンテナ
# ----------------------------------
  db:
    # Docker HubからMySQL5.7の公式イメージをダウンロードしてくる指定
    platform: linux/x86_64
    image: mysql:5.7
    container_name: beginapp_db
 
    # コンテナ内の環境変数を指定
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel_db
      MYSQL_USER: app
      MYSQL_PASSWORD: App123App
      TZ: 'Asia/Tokyo'
 
    # 起動時のコマンド
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci
    # ディレクトリ同期。設定ファイルとMySQLのデータが保存される場所を同期している。
    # コンテナは基本的に起動時に変更されてもコンテナ自体が止まるとデータが消えてしまうため、保存しておきたいものはホストマシンと同期しておく必要がある。
    volumes:
      - ./docker/db/data:/var/lib/mysql
      - ./docker/db/my.cnf:/etc/mysql/conf.d/my.cnf
    ports:
      - 3307:3306
